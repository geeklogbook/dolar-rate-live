services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: "LocalKafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    ports:
      - "8080:8080"

  data-lake:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  kafka-producer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bitcoin-producer
    depends_on:
      - kafka
    restart: always
    environment:
      - KAFKA_BROKER=kafka:9092
    command: ["python", "/app/btc_rates_producer.py"]
    volumes:
      - ./app:/app

  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bitcoin-datalake-consumer
    depends_on:
      - kafka
      - data-lake
      - kafka-producer 
    restart: always
    environment:
      - KAFKA_BROKER=kafka:9092
      - MINIO_ENDPOINT=http://data-lake:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
      - MINIO_BUCKET=bitcoin-data
    command: ["python", "/app/btc_rates_datalake_consumer.py"]
    volumes:
      - ./app:/app

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rates
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres

  kafka-postgres-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bitcoin-rdbs-consumer
    depends_on:
      - kafka
      - postgres
      - kafka-producer 
    restart: always
    environment:
      - KAFKA_BROKER=kafka:9092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=rates
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: ["python", "/app/btc_rates_postgres_consumer.py"]
    volumes:
      - ./app:/app

volumes:
  minio_data:
  postgres_data: